% Generated by roxygen2 (4.0.2): do not edit by hand
\name{venues.explore}
\alias{venues.explore}
\title{Explore Recommended and Popular Venues}
\usage{
venues.explore(ll = NULL, near = NULL, llAcc = NULL, alt = NULL,
  altAcc = NULL, radius = NULL, section = NULL, query = NULL,
  limit = NULL, offset = NULL, novelty = NULL, friendVisits = NULL,
  time = NULL, day = NULL, venuePhotos = NULL, lastVenue = NULL,
  openNow = NULL, sortByDistance = NULL, price = NULL, saved = NULL,
  specials = NULL, m = "foursquare")
}
\arguments{
\item{ll}{required unless near is provided. Latitude and
longitude of the user's location.}

\item{near}{required unless ll is provided. A string naming
a place in the world. If the near string is not geocodable,
returns a failed_geocode error. Otherwise, searches within
the bounds of the geocode and adds a geocode object to the
response.}

\item{llAcc}{Accuracy of latitude and longitude, in meters.}

\item{alt}{Altitude of the user's location, in meters.}

\item{altAcc}{Accuracy of the user's altitude, in meters.}

\item{radius}{Radius to search within, in meters.  If radius
is not specified, a suggested radius will be used based on
the density of venues in the area.}

\item{section}{One of food, drinks, coffee, shops, arts,
outdoors, sights, trending or specials, nextVenues (venues
frequently visited after a given venue), or topPicks (a mix
of recommendations generated without a query from the
user). Choosing one of these limits results to venues with
the specified category or property.}

\item{query}{A term to be searched against a venue's tips,
category, etc. The query parameter has no effect when a
section is specified.}

\item{limit}{Number of results to return, up to 50.}

\item{offset}{Used to page through results.}

\item{novelty}{Pass new or old to limit results to places
the acting user hasn't been or has been, respectively.
Omitting this parameter returns a mixture of old and new
venues.}

\item{friendVisits}{Pass visited or notvisited to limit
results to places the acting user's friends have or haven't
been, respectively. Omitting this parameter returns a
mixture of venues to which the user's friends have or
haven't been.}

\item{time}{Pass any to retrieve results for any time of
day. Omitting this parameter returns results targeted to
the current time of day.}

\item{day}{Pass any to retrieve results for any day of the
week. Omitting this parameter returns results targeted to
the current day of the week.}

\item{venuePhotos}{Boolean flag to include a photo in the
response for each venue, if one is available.  Default is 0
(no photos).  Photos are returned as part of the venue JSON
object.}

\item{lastVenue}{A venue ID to use in combination with the
intent=nextVenues parameter, which returns venues users
often visit after a given venue.  If intent=nextVenues is
specified but lastVenue is not, the user's last check-in
will be used if it is within 2 hours.  If the user has not
checked in within the last 2 hours, no results will be
returned.}

\item{openNow}{Boolean flag to only include venues that are
open now. This prefers official provider hours but falls
back to popular check-in hours.}

\item{sortByDistance}{Boolean flag to sort the results by
distance instead of relevance.}

\item{price}{Comma separated list of price points.
Currently the valid range of price points are [1,2,3,4], 1
being the least expensive, 4 being the most expensive.  For
food venues, in the United States, 1 is < $10 an entree, 2
is $10-$20 an entree, 3 is $20-$30 an entree, 4 is > $30 an
entree.}

\item{saved}{Boolean flag to only include venues that the
user has saved on their To-Do list or to another list.}

\item{specials}{Boolean flag to only include venues that
have a special.}

\item{m}{Accepts values of "foursquare"}
}
\value{
keywords A list of words that are suggested for the
	user to input as refinements. Has a count with the number
	of elements, and items with the actual keyword objects.
	Each object has a displayName as well as a keyword which is
	meant to be fed back into the system as a query. Presents
	an object with a text field that contains a warning message
	(i.e. not enough results, try doing X). An array of objects
	representing groups of recommendations. Each group contains
	a type such as "recommended," a human-readable (eventually
	localized) name such as "Recommended Places," and an array
	items of recommendation objects, which have an ordered list
	of objects which contain reasons and venue. The reasons are
	count and items, where each item has a type such as
	"social" and a message about why this place may be of
	interest to the acting user. The venues are compact venues
	that include stats and hereNow data. We encourage clients
	to be robust against the introduction or removal of group
	types by treating the groups as opaque objects to be
	displayed or by placing unfamiliar groups in a catchall
	group. If no radius was specified in the request, presents
	the radius that was used for the query (based upon the
	density of venues in the query area). A text name for the
	location the user searched, e.g. "SoHo". A full text name
	for the location the user searched, e.g. "SoHo, New York".
	A message to the user based on their current context, e.g.
	"Suggestions for Tuesday afternoon".
}
\description{
Returns a list of recommended venues near the current loc.
}
\details{
Returns a list of recommended venues near the current
	location.  If authenticated, the method will potentially
	personalize the ranking based on you and your friends. If
	you do not authenticate, you will not get this
	personalization.  This endpoint is part of the venues API.
}
\examples{
venues.explore(ll="44.3,37.2", near="Chicago, IL",
	llAcc="10000.0", alt="0", altAcc="10000.0", radius="250",
	section="food", query="donuts", limit="10", offset="20",
	novelty="new", friendVisits="visited", time="any",
	day="any", venuePhotos="1",
	lastVenue="4ef0e7cf7beb5932d5bdeb4e", openNow="1",
	sortByDistance="1", price="2,3", saved="1", specials="1")
}

